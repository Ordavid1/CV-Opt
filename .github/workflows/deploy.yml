name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: vaulted-bivouac-417511
  REGION: us-east1
  SERVICE_NAME: cv-opt
  REPOSITORY: cv-opt-repo
  IMAGE: cv-opt

jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # OLD METHOD - Using service account key
    - name: Google Auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    # Configure Docker to use gcloud as a credential helper
    - name: Configure Docker
      run: |
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

    # Build the Docker image
    - name: Build Docker Image
      run: |
        docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}" .
        docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest" .

    # Push the Docker image to Google Artifact Registry
    - name: Push Docker Image
      run: |
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}"
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest"

    # Deploy to Cloud Run
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}" \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --service-account=${{ env.SERVICE_NAME }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
          --set-secrets=OPENAI_API_KEY=OPENAI_API_KEY:latest,APP_URL=APP_URL:latest,LEMON_SQUEEZY_STORE_ID=LEMON_SQUEEZY_STORE_ID:latest,LEMON_SQUEEZY_VARIANT_ID=LEMON_SQUEEZY_VARIANT_ID:latest,LEMON_SQUEEZY_VARIANT_ID_BUNDLE=LEMON_SQUEEZY_VARIANT_ID_BUNDLE:latest,LEMON_API_KEY=LEMON_API_KEY:latest,LEMON_SQUEEZY_WEBHOOK_SECRET=LEMON_SQUEEZY_WEBHOOK_SECRET:latest,ADMIN_API_KEY=ADMIN_API_KEY:latest \
          --set-env-vars=COMMIT_SHA=${{ github.sha }},DEPLOY_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ"),NODE_ENV=production,DATA_STORAGE_TYPE=cloud-storage,STORAGE_BUCKET=cv-opt-user-data \
          --memory=512Mi \
          --cpu=1 \
          --timeout=300 \
          --concurrency=80 \
          --max-instances=10

    # Output the URL
    - name: Show Output
      run: |
        echo "Service URL: $(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)')"
